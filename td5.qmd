---
format: 
  pdf:
    documentclass: article
    classoption: ["a4paper", "12pt", "fleqn"]
    geometry: top=2.5cm, bottom=2.5cm, left=2.5cm, right=2.5cm
    number-sections: true
    number-depth: 8
    toc: true
header-includes: |
  \usepackage{hyperref}  % Liens cliquables
  \hypersetup{hidelinks}  % Désactive complètement la mise en couleur des liens
editor: 
  markdown: 
    wrap: 72
---

\begin{titlepage}
    \begin{center}
        {\LARGE \textbf{Séries temporelles univariées}}\\
        \vspace{0.5cm}
        {\Large M1 ECAP -- TD5 -- Année 2024/2025}\\
        
        \vspace{2cm}
        
          {\Large \textbf{TD5 : Évaluation de modèles de prévision}}\\
        \vspace{0.5cm}
        \textit{Responsable d'enseignement : Benoît SÉVI}\\
        \href{mailto:benoit.sevi@univ-nantes.fr}{benoit.sevi@univ-nantes.fr}\\
        
        \vspace{1.5cm}
        
        {\large \textbf{ERNOUL DE LA PROVOTÉ Arthur, HERVÉ Isaline}}
        
        \vfill
        
        {\large \today}
        
    \end{center}
\end{titlepage}
\begingroup
\hypersetup{linkcolor=black}
\tableofcontents
\endgroup

\newpage

# Chargement des packages nécessaires

```{r}
#| output: false

# libraries isaline
library(readxl)
library(forecast)
library(sandwich)
library(lmtest)
library(tseries)


# libraries arthur





```

# Import des données

```{r}
wheat <- read_excel("wheat_support5_STU.xlsx")
```

# Création d'une ts

```{r}
wheat_ts <- ts(wheat$return, start = c(2006, 1), end = c(2022, 1), frequency = 252)
```

# Modélisation ARMA

## Analyse des autocorrélations

```{r}
par(mfrow=c(1, 2))
acf(wheat_ts, main="Autocorrélation de la série")
pacf(wheat_ts, main="Autocorrélation partielle de la série")
```

L’ACF décroît rapidement vers zéro, ce qui suggère un modèle AR.

La PACF montre quelques valeurs significatives aux premiers retards, indiquant un possible AR(p).

# Sélection du meilleur modèle ARMA basé sur AIC/BIC

```{r}
meilleur_modele <- auto.arima(wheat_ts, max.p = 2, max.q = 0, seasonal = FALSE, stepwise = FALSE, approximation = FALSE)
print(meilleur_modele)
```

D'après auto arima, le meilleur modèle est un modèle ARIMA(0, 0, 0). Donc nous ne retiendrons donc pas pour la suite de l'analyse mais un modèle AR(1), qui simplifie les prévisions.

# Série de prévision - Rolling window

```{r}
horizons <- c(1, 5)
rolling_window_10 <- 10 * 252 
rolling_window_3  <- 3 * 252

rolling_forecast <- function(series, window_size, h = 1) {
  n <- length(series)
  forecasts <- rep(NA, n - window_size - h + 1)
  actuals <- rep(NA, n - window_size - h + 1)
  
  for (i in 1:(n - window_size - h + 1)) {
    train <- series[i:(i + window_size - 1)]
    model <- Arima(train, order = c(1, 0, 0))
    forecast_i <- forecast(model, h = h)
    
    forecasts[i] <- forecast_i$mean[h]
    actuals[i] <- series[i + window_size + h - 1]
  }
  
  return(data.frame(actual = actuals, forecast = forecasts))
}
```

## Sur les 10 dernières années : 

### Prévisions en t+1

```{r}
a10_forecasts_1d <- rolling_forecast(wheat_ts, rolling_window_10, h = 1)
```

### Prévisions en t+5

```{r}
a10_forecasts_5d <- rolling_forecast(wheat_ts, rolling_window_10, h = 5)
```

## Sur les 3 dernières années : 

### Prévisions en t+1

```{r}
a3_forecasts_1d <- rolling_forecast(wheat_ts, rolling_window_3, h = 1)
```

### Prévisions en t+5

```{r}
a3_forecasts_5d <- rolling_forecast(wheat_ts, rolling_window_3, h = 5)
```

# Modèle marche aléatoire

## Prévisions en t+1

```{r}
rw_forecasts_1d <- lag(wheat_ts, -1)
```

## Prévisions en t+5

```{r}
rw_forecasts_5d <- lag(wheat_ts, -5)
```

# Mincer-Zarnovitz

## Fonction de test de Mincer-Zarnowitz

```{r}
mz_test <- function(y, yhat) {
  model <- lm(y ~ yhat)
  summary(model)
}
```

## Modèle A10

```{r}
MZ_A10_1d <- mz_test(wheat_ts, a10_forecasts_1d)
MZ_A10_5d <- mz_test(wheat_ts, a10_forecasts_5d)
```

## Modèle A3

```{r}
MZ_A3_1d <- mz_test(wheat_ts, a3_forecasts_1d)
MZ_A3_5d <- mz_test(wheat_ts, a3_forecasts_5d)
```

## Marche aléatoire

```{r}
MZ_RW_1d <- mz_test(wheat_ts, rw_forecasts_1d)
MZ_RW_5d <- mz_test(wheat_ts, rw_forecasts_5d)
```

## Résultats 

```{r}
print("Test Mincer-Zarnowitz pour A10")
print(MZ_A10_1d)
print(MZ_A10_5d)

print("Test Mincer-Zarnowitz pour A3")
print(MZ_A3_1d)
print(MZ_A3_5d)

print("Test Mincer-Zarnowitz pour RW")
print(MZ_RW_1d)
print(MZ_RW_5d)
```

Le test de Mincer-Zarnowitz permet de tester si les prévisions sont non biaisées et efficaces par rapport aux observations réelles.
L'hypothèse nulle correspond à des prévisions parfaites ; si H0 est rejettée, le modèle de prévision est biaisée.

# Statistique de Diebold et Mariano

```{r}
wheat_ts <- ts(wheat$return, start = c(2006, 1), end = c(2022, 1), frequency = 252)
```


# Comparaison des erreurs

```{r}
# Charger les bibliothèques nécessaires
library(forecast)
library(sandwich)
library(lmtest)

# Fonction de perte (ex. erreur quadratique moyenne - MSE)
mse_data <- function(y) { mean((y$actual- y$forecast)^2, na.rm = TRUE) }

mse_A10_1d <- mse( a10_forecasts_1d)
mse_A3_1d <- mse( a3_forecasts_1d)


mse_A10_5d <- mse( a10_forecasts_5d)
mse_A3_5d <- mse( a3_forecasts_5d)
```


```{r}
# fonction de pert pour marche aléatoire
mse_vect <- function(y, yhat) { mean((y - yhat)^2, na.rm = TRUE) }


mse_RW_1d <- mse_vect(wheat_ts,  rw_forecasts_1d)
mse_RW_5d <- mse_vect(wheat_ts,  rw_forecasts_5d)
```



```{r}
# Charger les bibliothèques nécessaires
library(forecast)
library(sandwich)
library(lmtest)


# Fonction de perte MAE
## Pour marche aléatoire
mae_vect <- function(y, yhat) { mean(abs(y - yhat), na.rm = TRUE) }

# Calculer les pertes pour chaque modèle

mae_RW_1d <- mae_vect(wheat_ts,  rw_forecasts_1d)
mae_RW_5d <- mae_vect(wheat_ts,  rw_forecasts_5d)
```

```{r}
# Fonction de perte MAE

mae <- function(y) { mean(abs(y$actual- y$forecast), na.rm = TRUE) }


mae_A10_1d <- mae(a10_forecasts_1d)
mae_A3_1d <- mae(a3_forecasts_1d)


mae_A10_5d <- mae(a10_forecasts_5d)
mae_A3_5d <- mae(a3_forecasts_5d)


```

```{r}
# Calculer les différences de perte
mae_diff_1d <- a10_forecasts_1d$forecast - a3_forecasts_1d$forecast
mae_diff_5d <- a10_forecasts_5d$forecast - a3_forecasts_5d$forecast


reg_1d <- lm(mae_diff_1d ~ 1)
reg_5d <- lm(mae_diff_5d ~ 1)

test_1d <- coeftest(reg_1d, vcov = NeweyWest(reg_1d))
test_1d

test_5d <- coeftest(reg_5d, vcov = NeweyWest(reg_5d))
test_5d

```


